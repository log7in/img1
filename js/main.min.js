function FewModal(e, o) {
    var s, i = this, e = $(e), n = !1, a = {};
    o = o || {},
    a.wrapperTime = o.wrapperTime || 300,
    a.bodyIn = o.bodyIn || 300,
    a.bodyOut = o.bodyOut || 300,
    a.disableHash = o.disableHash,
    a.disableUserClose = o.disableUserClose,
    this._showWrapper = function(o) {
        if (n)
            return o();
        e.css({
            display: "flex"
        }).hide().fadeIn(a.wrapperTime, function() {
            n = !0,
            o && o()
        })
    }
    ,
    this._hideWrapper = function(o) {
        n || o && o(),
        e.fadeOut(a.wrapperTime, function() {
            n = !1,
            o && o()
        })
    }
    ,
    this._showBody = function(o, n) {
        s != o ? s ? i._hideBody(function() {
            i._showBody(o, n)
        }) : e.children(o).css({
            display: "flex"
        }).hide().fadeIn(a.bodyIn, function() {
            s = o,
            n && n()
        }) : n && n()
    }
    ,
    this._hideBody = function(o) {
        e.children(s).fadeOut(a.bodyOut, function() {
            s = null,
            o && o()
        })
    }
    ,
    this.showBySelector = function(e, o) {
        var s = $(e);
        s.length > 0 && s.hasClass("fewmodal__body") && this._showWrapper(function() {
            i._showBody(e, o)
        })
    }
    ,
    this.close = function(e) {
        s && this._hideBody(function() {
            i._hideWrapper(e)
        })
    }
    ,
    this.getActive = function() {
        return s
    }
    ,
    function() {
        if (!a.disableHash) {
            var o = window.location.hash;
            o.length > 1 && i.showBySelector(o)
        }
        e.on("click", function(e) {
            if (!a.disableUserClose) {
                var o = $(e.target);
                if (o.hasClass("fewmodal__close") || o.hasClass("fewmodal") || o.hasClass("fewmodal__body"))
                    return i.close();
                o.closest(".fewmodal__close").length > 0 && i.close()
            }
        }),
        $(document).on("keypress", function(e) {
            a.disableUserClose || 27 == e.keyCode && i.close()
        }),
        a.disableHash || $(window).on("hashchange", function() {
            var e = window.location.hash;
            e !== s && e.length > 1 && i.showBySelector(e)
        })
    }()
}
!function(t) {
    function e(e) {
        var n = this;
        e = e || 1;
        var i = {
            1: {
                0: [1, 5, 2, 1, 3, 4, 5, 6, 4],
                1: [4, 6, 1, 2, 3, 6, 7, 4],
                2: [7, 2, 3, 4, 5, 1, 3, 2, 5, 7, 4]
            },
            2: {
                0: [1, 2, 3, 4, 5, 6, 1],
                1: [4, 2, 3, 6, 7, 1],
                2: [7, 2, 3, 4, 5, 6, 7, 1]
            }
        };
        this.renderCellById = function(e) {
            var n = t(document.createElement("div")).addClass("slot__cell")
              , i = t(document.createElement("div")).addClass("slot__symbol slot__symbol_" + e);
            return n.css({
                transform: "translate3d(0%, -100%, 0)"
            }),
            n.append(i)
        }
        ,
        this.shiftColumnOnce = function(e, i) {
            var o = t(".slot__col").eq(e)
              , l = n.getNextCellId(e)
              , r = n.renderCellById(l);
            o.append(r),
            r.width(),
            o.find(".slot__cell").each(function(e) {
                var n = t(this);
                n.css({
                    "transition-duration": "150ms",
                    transform: "translate3d(0," + (100 * -e + 100) + "%, 0 )"
                }),
                1 === e && n.on("transitionend", function() {
                    n.off(),
                    o.find(".slot__cell").first().remove(),
                    i()
                })
            })
        }
        ,
        this.getNextCellId = function(t) {
            var n = i[e][t];
            return n.length > 0 && n.shift()
        }
        ,
        this.spinColumn = function(t, e, i) {
            if (e.length < 1)
                return i();
            n.shiftColumnOnce(t, function() {
                n.spinColumn(t, e, i)
            })
        }
        ,
        this.run = function() {
            return new Promise(function(t) {
                function o() {
                    l >= 2 ? (e++,
                    t()) : l++
                }
                var l = 0;
                n.spinColumn(0, i[e][0], o),
                setTimeout(function() {
                    n.spinColumn(1, i[e][1], o)
                }, 150),
                setTimeout(function() {
                    n.spinColumn(2, i[e][2], o)
                }, 300)
            }
            )
        }
        ,
        this.setForLevel = function() {
            e > 1 && t(".slot__col").each(function(o) {
                var l = t(this);
                l.children().remove();
                var r = n.renderCellById(i[e - 1][o].pop());
                r.css({
                    transform: "translate3d(0, 0, 0)"
                }),
                l.append(r)
            })
        }
    }
    function n(e) {
        var n = this;
        e = e || 1;
        var i = {
            1: 23,
            2: 35
        }
          , o = t(".cell")
          , l = o.length;
        this.recursiveHighlight = function(t, e, i) {
            if (t > e)
                return i();
            var r = o.eq(t % l);
            r.is(":visible") ? (o.removeClass("cell_active"),
            r.addClass("cell_active"),
            setTimeout(function() {
                n.recursiveHighlight(++t, e, i)
            }, 100)) : n.recursiveHighlight(++t, e, i)
        }
        ,
        this.highlightRandomCell = function() {
            var t = o.eq(function(t, e) {
                var n = t - .5 + Math.random() * (e - t + 1);
                return n = Math.round(n)
            }(0, l - 1));
            t.is(":visible") && (o.removeClass("cell_active"),
            t.addClass("cell_active"))
        }
        ,
        this.run = function() {
            return this.stopWaiting(),
            new Promise(function(t) {
                n.recursiveHighlight(0, i[e], function() {
                    e < 2 && e++,
                    t()
                })
            }
            )
        }
        ,
        this.startWaiting = function() {
            this.waiting = setInterval(n.highlightRandomCell, 600)
        }
        ,
        this.stopWaiting = function() {
            clearInterval(n.waiting)
        }
        ,
        this.highlightForLevel = function() {
            e > 1 ? o.eq(i[e - 1] % l).addClass("cell_active") : n.startWaiting()
        }
    }
    var i = new FewModal("#modal-content",{
        disableHash: !0
    })
      , o = new function(i) {
        var o = this
          , l = 1
          , r = {
            1: 2,
            2: 1
        }
          , a = {
            1: "0",
            2: "100000",
            3: "+200FS"
        }
          , s = t(".play-trigger")
          , u = t("#try-counter")
          , c = t("#prize-counter")
          , h = t(".game__button-holder");
        this.init = function() {
            l = +o.load() || l,
            this.slot = new e(l),
            this.slot.setForLevel(),
            this.frame = new n(l),
            this.frame.highlightForLevel(),
            this.updateTryCounter(),
            this.updatePrizeCounter(),
            s.on("click", function() {
                o.play()
            }),
            s.attr("disabled", null)
        }
        ,
        this.play = function() {
            return l > 2 ? i.showBySelector("#level-2") : i.getActive() ? i.close(o.play) : (s.attr("disabled", "disabled"),
            h.hide(),
            void Promise.all([o.slot.run(), o.frame.run()]).then(function() {
                setTimeout(function() {
                    i.showBySelector("#level-" + l),
                    l++,
                    o.updateTryCounter(),
                    o.updatePrizeCounter(),
                    s.attr("disabled", null),
                    h.show(),
                    o.save()
                }, 1e3)
            }))
        }
        ,
        this.updateTryCounter = function() {
            l > 2 ? u.html(0) : u.html(r[l])
        }
        ,
        this.updatePrizeCounter = function() {
            c.html(a[l]),
            l > 2 && o.togglePrizes()
        }
        ,
        this.togglePrizes = function() {
            var t = 2;
            setInterval(function() {
                t = 2 === t ? 3 : 2,
                c.html(a[t])
            }, 1e3)
        }
        ,
        this.save = function() {
            try {
                window.localStorage.setItem("CX_FruitsOfTheNile", l)
            } catch (t) {
                console.log(t)
            }
        }
        ,
        this.load = function() {
            return window.localStorage.getItem("CX_FruitsOfTheNile")
        }
        ,
        this.reset = function() {
            window.localStorage.removeItem("CX_FruitsOfTheNile")
        }
        ,
        this.getLevel = function() {
            return l
        }
    }
    (i);
    t(window).on("load", function() {
        o.init(),
        o.getLevel() > 2 && i.showBySelector("#level-2")
    });
    var l = t("body");
    l.on("focus", ".cx-autoreg input[name=phone]", function(e) {
        var n = t(e.target);
        n.val() || n.val("+")
    }),
    l.on("blur", ".cx-autoreg input[name=phone]", function(e) {
        var n = t(e.target);
        n.val() && "+" !== n.val() || n.val("")
    }),
    l.on("input", ".cx-autoreg input[name=phone]", function(e) {
        var n = t(e.target);
        n.val(n.val().replace(/\D/g, "")),
        n.val("+" + n.val())
    })
}(jQuery);
